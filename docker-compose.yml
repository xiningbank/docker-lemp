version: '3'

networks:
    lemp:

services:
    nginx:
        image: ${NGINX_IMAGE}
        container_name: ${NGINX_CONTAINER:-nginx}
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/www/html:/var/www/html
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/sites-available:/etc/nginx/sites-available
            - ./nginx/sites-enabled:/etc/nginx/sites-enabled
            - ./nginx/cert:/etc/cert
            - ./nginx/log:/var/log/nginx
        environment:
            TZ: ${TZ:-Asia/Shanghai}
        depends_on:
            - php7
            - mysql
        privileged: true
        networks:
            - lemp
    mysql:
        image: ${MYSQL_IMAGE}
        container_name: ${MYSQL_CONTAINER:-mysql}
        ports:
            - "${MYSQL_PORT}:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            LANG: C.UTF-8
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            TZ: ${TZ:-Asia/Shanghai}
        networks:
            - lemp
    php7:
        build:
            context: ./Dockerfiles/.
            dockerfile: ${PHP7_DOCKERFILE}
        # Because this container will be created by a Dockerfile, this parameter(image) is not a must.
        # if you want to specify a name, you can specify whatever you like, as long as it won't conflict with other images.
        # if this parameter is ignored, in this instance, the image name will be "docker-lemp_php7:latest".
        image: ${PHP7_IMAGE}
        container_name: ${PHP7_CONTAINER:-php7}
        volumes:
            - /var/www/html:/var/www/html
        ports:
            - "127.0.0.1:9000:9000"
        networks:
            - lemp
    redis:
        image: ${REDIS_IMAGE}
        container_name: ${REDIS_CONTAINER:-redis}
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - ./redis/redis.conf:/etc/redis/redis.conf
            - ./redis/data:/data
        ports:
            - "127.0.0.1:6379:6379"
        networks:
            - lemp
    redisqueue:
        image: ${REDIS_IMAGE}
        container_name: ${REDIS_QUEUE_CONTAINER:-redisqueue}
        command: redis-server --requirepass ${REDIS_QUEUE_PASSWORD}
        volumes:
            - ./redisqueue/redis.conf:/etc/redis/redis.conf
            - ./redisqueue/data:/data
        ports:
            - "127.0.0.1:6380:6379"
        networks:
            - lemp
    meilisearch:
        image: ${MEILISEARCH_IMAGE}
        container_name: ${MEILISEARCH_CONTAINER:-meilisearch}
        volumes:
            - ./meilisearch/data.ms:/data.ms
        ports:
            - "${MEILISEARCH_PORT}:7700"
        environment:
            MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY}
        networks:
            - lemp
