version: '3'

networks:
    lemp:

services:
    nginx:
        image: ${NGINX_IMAGE}
        container_name: ${NGINX_CONTAINER:-nginx}
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ${HOST_SRC}:/var/www/html
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/sites-available:/etc/nginx/sites-available
            - ./nginx/sites-enabled:/etc/nginx/sites-enabled
            - ./nginx/log:/var/log/nginx
            - ./certbot/data:/etc/letsencrypt
        environment:
            TZ: ${TZ:-Asia/Shanghai}
        depends_on:
            - php7.4.33
        networks:
            - lemp
    mysql:
        image: ${MYSQL_IMAGE}
        container_name: ${MYSQL_CONTAINER:-mysql}
        ports:
            - "${MYSQL_PORT}:3306"
        volumes:
            - ./mysql/data:/var/lib/mysql
        environment:
            LANG: C.UTF-8
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            TZ: ${TZ:-Asia/Shanghai}
        networks:
            - lemp
    php7.4.33:
        build:
            context: ./Dockerfiles
            dockerfile: df_php7.4.33-fpm
        # Because this container will be created by a Dockerfile, this parameter(image) is not a must.
        # if you want to specify a name, you can specify whatever you like, as long as it won't conflict with other images.
        # if this parameter is ignored, in this instance, run "docker images", the information will be displayed as below:
        # REPOSITORY                TAG     IMAGE ID
        # df_php7.4.33-fpm          latest  12ee21a0e1c5
        # docker-lemp-php7.4.33     latest  12ee21a0e1c5
        # the two images share the same Image ID.
        # if run "docker ps", you'll see the IMAGE is: df_php7.4.33-fpm
        image: df_php7.4.33-fpm
        container_name: ${CNP}php7.4.33
        volumes:
            - ${HOST_SRC}:/var/www/html
        ports:
            - "127.0.0.1:9000:9000"
        networks:
            - lemp
    redis:
        image: ${REDIS_IMAGE}
        container_name: ${REDIS_CONTAINER:-redis}
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - ./redis/redis.conf:/etc/redis/redis.conf
            - ./redis/data:/data
        ports:
            - "127.0.0.1:6379:6379"
        networks:
            - lemp
    certbot:
        image: ${CERTBOT_IMAGE}
        container_name: ${CERTBOT_CONTAINER:-certbot}
        volumes:
            - ${HOST_SRC}:/var/www/html
            - ./certbot/data:/etc/letsencrypt
            - ./certbot/lib:/var/lib/letsencrypt
            - ./certbot/log:/var/log/letsencrypt
        networks:
            - lemp
    meilisearch:
        image: ${MEILISEARCH_IMAGE}
        container_name: ${MEILISEARCH_CONTAINER:-meilisearch}
        volumes:
            - ./meilisearch/data.ms:/data.ms
        ports:
            - "${MEILISEARCH_PORT}:7700"
        environment:
            MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY}
        networks:
            - lemp
    mailcatcher:
        image: schickling/mailcatcher
        container_name: ${MAILCATCHER_CONTAINER:-mailcatcher}
        ports:
            - "1081:1080"
        networks:
            - lemp
